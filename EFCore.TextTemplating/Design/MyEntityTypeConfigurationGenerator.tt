<#@ template inherits="MyCodeGeneratorBase" visibility="internal" linePragmas="false" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Microsoft.EntityFrameworkCore" #>
<#@ import namespace="Microsoft.EntityFrameworkCore.Design" #>
<#@ import namespace="Microsoft.EntityFrameworkCore.Metadata" #>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using <#= ModelNamespace #>;

namespace <#= Namespace #>
{
    public class <#= EntityType.Name #>Configuration : IEntityTypeConfiguration<<#= EntityType.Name #>>
    {
        public void Configure(EntityTypeBuilder<<#= EntityType.Name #>> builder)
        {
<#
    // TODO
#>
        }
    }
}
<#+
    // NB: T4 parameter directives aren't compatible with .NET Standard
    public IEntityType EntityType { get; private set; }
    public string ModelNamespace { get; private set; }
    public string Namespace { get; private set; }
    public ICSharpHelper Code { get; private set; }

    public void Initialize()
    {
        EntityType = (IEntityType)Session["EntityType"];
        ModelNamespace = (string)Session["ModelNamespace"];
        Namespace = (string)Session["Namespace"];
        Code = (ICSharpHelper)Session["Code"];
    }
#>