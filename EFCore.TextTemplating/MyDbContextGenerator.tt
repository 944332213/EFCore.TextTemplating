<#@ template inherits="MyCodeGeneratorBase" visibility="internal" linePragmas="false" #>
<#@ import namespace="Microsoft.EntityFrameworkCore.Design" #>
<#@ import namespace="Microsoft.EntityFrameworkCore.Metadata" #>
<#@ import namespace="Microsoft.EntityFrameworkCore.Scaffolding" #>
using Microsoft.EntityFrameworkCore;
using <#= ModelNamespace #>;

namespace <#= Namespace #>
{
    public partial class <#= ContextName #> : DbContext
    {
<#
    foreach (var entityType in Model.GetEntityTypes())
    {
#>
        public virtual DbSet<<#= entityType.Name #>> <#= entityType["Scaffolding:DbSetName"] #> { get; set; }
<#
    }

    var useProvider = ProviderCode.GenerateUseProvider(
        ConnectionString,
        ProviderCode.GenerateProviderOptions());
    var contextOptions = ProviderCode.GenerateContextOptions();
    if (contextOptions != null)
    {
        useProvider = useProvider.Chain(contextOptions);
    }
#>

        protected override void OnConfiguring(DbContextOptionsBuilder options)
            => options<#= Code.Fragment(useProvider) #>;

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
<#
    foreach (var entityType in Model.GetEntityTypes())
    {
#>
            modelBuilder.ApplyConfiguration(new <#= entityType.Name #>Configuration());
<#
    }
#>
        }
    }
}
<#+
    // NB: T4 parameter directives aren't compatible with .NET Standard
    public IModel Model { get; private set; }
    public string ModelNamespace { get; private set; }
    public string Namespace { get; private set; }
    public string ContextName { get; private set; }
    public string ConnectionString { get; private set; }
    public bool SuppressConnectionStringWarning { get; private set; }
    public bool UseDataAnnotations { get; private set; }
    public ICSharpHelper Code { get; private set; }
    public IProviderConfigurationCodeGenerator ProviderCode { get; private set; }
    public IAnnotationCodeGenerator AnnotationCode { get; private set; }

    public void Initialize()
    {
        Model = (IModel)Session["Model"];
        ModelNamespace = (string)Session["ModelNamespace"];
        Namespace = (string)Session["Namespace"];
        ContextName = (string)Session["ContextName"];
        ConnectionString = (string)Session["ConnectionString"];
        SuppressConnectionStringWarning = (bool)Session["SuppressConnectionStringWarning"];
        UseDataAnnotations = (bool)Session["UseDataAnnotations"];
        Code = (ICSharpHelper)Session["Code"];
        ProviderCode = (IProviderConfigurationCodeGenerator)Session["ProviderCode"];
        AnnotationCode = (IAnnotationCodeGenerator)Session["AnnotationCode"];
    }
#>